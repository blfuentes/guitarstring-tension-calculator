@using Calculator = Calculator.DLL

@rendermode InteractiveServer

<div>
    <MudChart ChartType="ChartType.Line" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="800px" Height="350px" ChartOptions="@Options" />
</div>

@code {
    [Parameter]
    public Calculator.StringSet StringSet { get; set; }

    public List<ChartSeries> Series { get; set; }

    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.

    public ChartOptions Options = new ChartOptions();

    public string[] XAxisLabels = [];

    protected override async Task OnInitializedAsync()
    {
        Series = new List<ChartSeries>()
        {
            new ChartSeries() { Name = "Tension Chart", Data = StringSet.StringCollection.Select(s => s.StringTension_LB).ToArray() }
        };
        XAxisLabels = StringSet.StringCollection.Select(s => s.Note.FullName).ToArray();


        Options.MaxNumYAxisTicks = 25;
        Options.YAxisTicks = 5;

        await Task.Delay(500);
    }

    protected override async Task OnParametersSetAsync()
    {
        //
        Series = new List<ChartSeries>()
        {
            new ChartSeries() { Name = "Tension Chart", Data = StringSet.StringCollection.Select(s => s.StringTension_LB).ToArray() }
        };
        XAxisLabels = StringSet.StringCollection.Select(s => s.Note.FullName).ToArray();
        await Task.Delay(500);
    }
}